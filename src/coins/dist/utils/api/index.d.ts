import { TRequestParams, TFeeRate, TCardanoAsset, TFeeResponse, TBalanceResponse } from './types';
export declare const sendRequest: <T, D = unknown>({ url, method, data, params, skipNestedData, }: TRequestParams<D>) => Promise<T | null>;
export declare const getFeeRate: (chain: string) => Promise<TFeeRate>;
export declare const getTxHex: (chain: string, txId: string) => Promise<string | null>;
export declare const getTxParams: (type: string, from?: string, to?: string, value?: string, chain?: string, contractAddress?: string) => Promise<any>;
export declare const getCardanoAsset: (asset: string) => Promise<TCardanoAsset | null>;
export declare const getNetworkFeeRequest: (chain: string, address?: string, value?: string, extraId?: string) => Promise<TFeeResponse | null>;
export declare const getBalance: (address: string, chain?: string, tokenSymbol?: string, contractAddress?: string, isFullBalance?: boolean) => Promise<TBalanceResponse | null>;
export declare const sendRawTransaction: (transaction: string, currency: string, data?: any) => Promise<string | null>;
export declare const getAddressNonce: (chain: string, address: string) => Promise<string>;
